version: "0.1"
runson: ${matrix.os}
autosplit: true
parallelism: 2
concurrency: 30
maxRetries: 1
testSuiteTimeout: 480
globalTimeout: 480

env:
  TARGET_OS: LINUX
  GOCACHE: /home/ltuser/foreman/terraform-provider-aws/cache
pre:
  - go env GOCACHE
  - git apply ./etc/patch/0001-endpoint.patch
  - go mod tidy
  - go mod download
  - LOCALSTACK_API_KEY=${{ .secrets.LOCALSTACK_API_KEY }} docker compose up -d
  - sleep 20
  - docker ps -a
  - curl http://localhost:4566/health
  - go test -c
cacheDirectories:
  - cache

cacheKey: '{{ checksum "go.mod" }}'
matrix:
  service: ['events', 'sts', 'appautoscaling', 'organizations', 'docdb', 'secretsmanager', 'kafka', 'lakeformation', 'iot', 'rds', 'elasticsearch', 'autoscaling', 'backup', 'glue', 'qldb', 'ecr', 'efs', 'cloudtrail', 'ssm', 'redshift', 'route53resolver', 'sns', 'logs', 'ses', 'ecs', 'emr', 'elasticbeanstalk', 'opensearch', 's3control', 'amplify', 'appsync', 'elasticache', 'eks', 'elbv2', 'iotanalytics', 'swf', 'athena', 'elb', 'glacier', 'sqs', 'acm', 'cloudformation', 'ec2', 'serverlessrepo', 'kinesis', 'cognitoidp', 'mediastore', 'route53', 'cloudfront', 'codecommit', 'mwaa', 'resourcegroups', 'batch', 'sagemaker', 'dynamodb', 'kinesisanalytics', 'cognitoidentity', 'firehose', 'mq', 'configservice', 'apigateway', 'resourcegroupstaggingapi', 'transcribe', 'neptune', 'cloudwatch', 'apigatewayv2', 'lambda', 'iam', 'fis', 'appconfig', 'kms', 's3']
  os: ["linux"]
  
testDiscovery:
  type: raw
  mode: dynamic
  command: grep  -nr 'func TestAcc' ./internal/service/${service} |  sed 's/.*:func //' | sed 's/(.*//'
  # command: grep  -nr 'func TestAccS3BucketObject' ./internal/service/s3 |  sed 's/.*:func //' | sed 's/(.*//' | head

# testRunnerCommand: go test -v -timeout 30s -run ^$test$ github.com/hashicorp/terraform-provider-aws/internal/service/s3
# testRunnerCommand: TF_ACC=1 AWS_ACCESS_KEY_ID=test AWS_SECRET_ACCESS_KEY=test AWS_DEFAULT_REGION=us-west-1 AWS_ALTERNATE_ACCESS_KEY_ID=test AWS_ALTERNATE_SECRET_ACCESS_KEY=test AWS_ALTERNATE_SECRET_ACCESS_KEY=test AWS_ALTERNATE_REGION=us-east-2 AWS_THIRD_REGION=eu-west-1 go test -v -timeout 30s -run ^$test$ ./$(grep  -nr 'func $test' internal | sed 's:/[^/]*$::')
testRunnerCommand: TF_ACC=1 AWS_ACCESS_KEY_ID=test AWS_SECRET_ACCESS_KEY=test AWS_DEFAULT_REGION=us-west-1 AWS_ALTERNATE_ACCESS_KEY_ID=test AWS_ALTERNATE_SECRET_ACCESS_KEY=test AWS_ALTERNATE_SECRET_ACCESS_KEY=test AWS_ALTERNATE_REGION=us-east-2 AWS_THIRD_REGION=eu-west-1 go test -v -timeout 300s -run ^$test$ ./$(grep  -nr 'func $test(' internal | sed 's:/[^/]*$::')
# testRunnerCommand: ./test.bin -test.v -test.parallel=1 -test.count=1 -test.timeout=60m -test.run=^$test$
sourcePayload:
  platform: git
  link: https://github.com/macnev2013/terraform-provider-aws.git
  ref: feat/he
  accessToken: ${{ .secrets.PAT }}